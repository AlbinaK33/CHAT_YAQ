version: '3'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: chat
    ports:
      - "5432:5432"

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "9999:9999"
    depends_on:
      - postgres
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chat
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      SPRING_JPA_DATABASE: POSTGRESQL
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_SHOW_SQL: true
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend













#version: '3'
#
#services:
#  postgres:
#    build:
#      context: .
#      dockerfile: Dockerfile
#      args:
#        DB_USERNAME: ${DB_USERNAME}
#        DB_PASSWORD: ${DB_PASSWORD}
#        #Docker
#    environment:
#      POSTGRES_USER: ${DB_USERNAME}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_DB: chat
#      #env_file:
#      #- .env
#    ports:
#      - "5432:5432"
#
#  spring-app:
#    image: ua/yaq:latest
#    ports:
#      - "9999:9999"
#    depends_on:
#      - postgres
#    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/chat
#      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
#      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
#      SPRING_JPA_DATABASE: POSTGRESQL
#      SPRING_JPA_HIBERNATE_DDL_AUTO: none
#      SPRING_JPA_SHOW_SQL: true
#      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect






# docker build -t ua/yaq:latest .
## docker-compose up -d - Запуск контейнерів у фоновому режимі:
## docker-compose up
## docker-compose down - Зупинка всіх контейнерів


## docker-compose up -d - Запуск контейнерів у фоновому режимі
#docker-compose up --build - Збірка та запуск контейнерів знову
## docker-compose down - Зупинка всіх контейнерів



